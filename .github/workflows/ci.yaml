name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Remove uav_analysis from the dependencies
      shell: bash
      run: |
         sed -i -E 's/- --editable.*$/''/' environment-dev.yml

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: environment-dev.yml

        channels: conda-forge,defaults

        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true

    - name: Install uav_analysis
      shell:  bash -l {0}
      run: |
        git clone https://github.com/symbench/uav-analysis.git
        cd uav-analysis
        python -m pip install -e .
        python -m pip install sympy==1.5

    - name: Install FDM Tool
      shell: bash -l {0}
      run: |
        sudo apt-get update
        sudo apt-get install build-essential
        sudo apt-get install gfortran
        python bin/install_fdm.py ${GITLAB_TOKEN}
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      if: runner.os == 'Linux'

    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install -e .
        conda list

    - name: Run tests [Minimal]
      shell: bash -l {0}
      run: |
        pytest -v --color=yes symbench_athens_client/tests/ -m "not slow"

    - name: Run tests [Slower]
      shell: bash -l {0}
      run: |
        pytest -v --color=yes symbench_athens_client/tests/ -m "slow"
      continue-on-error: true
      env:
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
      if: runner.os == 'Linux'

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: symbench/symbench-athens-client:latest
          build-args: |
            GITLAB_TOKEN=${{ secrets.GITLAB_TOKEN }}
          file: docker/Dockerfile
